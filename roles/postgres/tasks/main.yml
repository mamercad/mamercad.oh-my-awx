- name: install psycopg2
  ansible.builtin.apt:
    state: present
    name: python3-psycopg2
  become: true

- name: install postgresql
  ansible.builtin.apt:
    state: present
    name: postgresql
  become: true

- name: install libjson-perl (for pg_lsclusters json output)
  ansible.builtin.apt:
    state: present
    name: libjson-perl
  become: true

- name: see if we have a cluster
  ansible.builtin.command: pg_lsclusters --json
  register: pg_lsclusters

- name: create cluster if necessary
  ansible.builtin.command: pg_createcluster {{ versions.postgres }} main
  register: pg_createcluster
  when: pg_lsclusters.stdout | from_json | length == 0
  become: true
  become_user: postgres

- name: start the new cluster if necessary
  ansible.builtin.command: pg_ctlcluster {{ versions.postgres }} main start
  register: pg_ctlcluster
  when:
    - pg_createcluster is defined
    - pg_createcluster is changed
  become: true
  become_user: postgres

- name: start and enable postgresql
  ansible.builtin.systemd:
    name: postgresql
    state: started
    enabled: true
  become: true

- name: create awx database
  community.postgresql.postgresql_db:
    state: present
    name: awx
  become: true
  become_user: postgres

- name: create awx user
  community.postgresql.postgresql_user:
    state: present
    db: awx
    name: awx
    password: "{{ pg_password }}"
    priv: ALL
  become: true
  become_user: postgres

- name: grant awx pb_hba
  community.postgresql.postgresql_pg_hba:
    dest: /etc/postgresql/{{ versions.postgres }}/main/pg_hba.conf
    contype: host
    users: awx
    source: "{{ hostvars['app1']['ansible_default_ipv4']['address'] ~ '/32' }}"
    databases: awx
    method: md5
  become: true
  become_user: postgres
  notify: reload postgres

- name: listen on all addresses
  community.postgresql.postgresql_set:
    name: listen_addresses
    value: '*'
  become: true
  become_user: postgres
  notify: restart postgres
